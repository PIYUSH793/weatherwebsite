{"version":3,"sources":["components/Weatherapp.js","App.js","index.js"],"names":["Weatherapp","useState","city","setcity","search","setsearch","useEffect","a","url","fetch","response","json","resJson","fetchApi","className","type","value","onChange","event","target","current","temp_c","forecast","forecastday","day","mintemp_c","maxtemp_c","location","localtime","hour","wind_kph","wind_dir","condition","text","humidity","astro","sunrise","sunset","App","ReactDOM","render","document","getElementById"],"mappings":"6PA4IeA,EAxIG,WAElB,MAAuBC,mBAAS,MAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,mBAAS,QAAnC,mBAAMG,EAAN,KAAaC,EAAb,KAwBC,OArBDC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DAITC,EAJS,2FAIiFJ,EAJjF,qCAKQK,MAAMD,GALd,cAKTE,EALS,gBAMOA,EAASC,OANhB,OAMTC,EANS,OAWdT,EAAQS,GAXM,2CAAH,qDAgBbC,KACD,CAACT,IAIA,mCACE,sBAAKU,UAAU,MAAf,UAEE,qBAAKA,UAAU,YAAf,SACE,uBACGC,KAAK,SACLC,MAAOZ,EACPU,UAAU,aACVG,SAAU,SAACC,GAAUb,EAAUa,EAAMC,OAAOH,YAKjDd,EAMJ,gCAEC,sBAAKY,UAAU,OAAf,UAEG,qBAAIA,UAAU,WAAd,UACA,mDAAWV,KAITF,EAAKkB,QAMP,qBAAIN,UAAU,OAAd,+BACIZ,EAAKkB,QAAQC,OADjB,WALC,mBAAGP,UAAU,WAAb,2BAWDZ,EAAKoB,SAML,qBAAIR,UAAU,cAAd,mBACOZ,EAAKoB,SAASC,YAAY,GAAGC,IAAIC,UADxC,iBAC8DvB,EAAKoB,SAASC,YAAY,GAAGC,IAAIE,UAD/F,WALC,mBAAGZ,UAAU,aAanB,uBAEEZ,EAAKoB,SAKC,2DACgBpB,EAAKyB,SAASC,UAC9B,uBAFA,2BAGe1B,EAAKoB,SAASC,YAAY,GAAGM,KAAK,GAAGC,SAHpD,QAIA,uBAJA,+BAKmB5B,EAAKoB,SAASC,YAAY,GAAGM,KAAK,GAAGE,SACxD,uBANA,kCAOsB7B,EAAKoB,SAASC,YAAY,GAAGM,KAAK,GAAGG,UAAUC,KACrE,uBARA,+BASc/B,EAAKoB,SAASC,YAAY,GAAGM,KAAK,GAAGK,SATnD,KAUA,uBAVA,wBAWYhC,EAAKoB,SAASC,YAAY,GAAGY,MAAMC,QAC/C,uBAZA,uBAaWlC,EAAKoB,SAASC,YAAY,GAAGY,MAAME,OAC9C,0BAlBF,mBAAGvB,UAAU,gBA8BjB,qBAAKA,UAAU,cAEf,qBAAKA,UAAU,cAEf,qBAAKA,UAAU,mBA7EX,mBAAGA,UAAU,WAAb,iCClCOwB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.33e7f097.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./css/style.css\";\r\n\r\n\r\nconst Weatherapp= () =>{\r\n\r\nconst [city,setcity] = useState(null);\r\nconst[search,setsearch] = useState(\"pune\");\r\n\r\n\r\nuseEffect(()=>{\r\n  const fetchApi = async () =>{\r\n  \r\n    \r\n\r\n    const url = `http://api.weatherapi.com/v1/forecast.json?key=b2180a8f20fe44ef815123902211106&q=${search}&days=1&aqi=no&alerts=no`\r\n    const response = await fetch(url)\r\n    const resJson = await response.json();\r\n\r\n     //console.log(resJson);\r\n   \r\n     \r\n     setcity(resJson)\r\n     \r\n     };\r\n\r\n\r\n   fetchApi();\r\n},[search])\r\n\r\n\r\n return(\r\n   <>\r\n     <div className=\"box\">\r\n\r\n       <div className=\"inputData\">\r\n         <input\r\n            type=\"search\"\r\n            value={search}\r\n            className=\"inputFeild\"\r\n            onChange={(event)=>{ setsearch(event.target.value) }}\r\n         />\r\n\r\n       </div>\r\n     \r\n     {!city ? (\r\n        <p className=\"errorMsg\">No Data Found</p>\r\n     ) :\r\n\r\n  (\r\n\r\n   <div>\r\n\r\n    <div className=\"info\">\r\n\r\n       <h2 className=\"location\">\r\n       <i>🌤️</i>{search}\r\n       </h2>\r\n       \r\n\r\n       {!city.current ? (\r\n        <p className=\"errorMsg\">No Data Found</p>\r\n     ) :\r\n\r\n     (\r\n\r\n       <h1 className=\"temp\">\r\n       🌦️{city.current.temp_c}°C\r\n       </h1>\r\n\r\n     )}\r\n\r\n     {!city.forecast ? (\r\n        <p className=\"errorMsg\"></p>\r\n     ) :\r\n\r\n  (\r\n\r\n       <h3 className=\"tempmin_max\">\r\n       Min : {city.forecast.forecastday[0].day.mintemp_c}°C | Max : {city.forecast.forecastday[0].day.maxtemp_c}°C\r\n       </h3>\r\n\r\n       \r\n\r\n  )}\r\n\r\n  <br/>\r\n\r\n  {!city.forecast ? (\r\n        <p className=\"errorMsg\"></p>\r\n     ) :\r\n     (\r\n          \r\n          <h3>\r\n          Date & Time 🕒 {city.location.localtime}\r\n          <br></br>\r\n          Wind Speed 🎐 {city.forecast.forecastday[0].hour[0].wind_kph} km/h\r\n          <br></br>\r\n          Wind Direction 🧭 {city.forecast.forecastday[0].hour[0].wind_dir} \r\n          <br></br>\r\n          Weather Condition ☁️ {city.forecast.forecastday[0].hour[0].condition.text}\r\n          <br></br>\r\n          Humidity 🌤️ {city.forecast.forecastday[0].hour[0].humidity} %\r\n          <br></br>\r\n          Sunrise 🌅 {city.forecast.forecastday[0].astro.sunrise}\r\n          <br></br>\r\n          Sunset 🌇 {city.forecast.forecastday[0].astro.sunset}\r\n          <br></br>\r\n          \r\n          \r\n          </h3>\r\n\r\n          //Hourly Temperature 🌦️ {city.forecast.forecastday[0].hour[0].temp_c}°C\r\n\r\n     )}\r\n\r\n     \r\n    </div>\r\n  \r\n    <div className=\"wave -one\"></div>\r\n\r\n    <div className=\"wave -two\"></div>\r\n\r\n    <div className=\"wave -three\"></div>\r\n\r\n   </div>\r\n    )}\r\n\r\n    \r\n       \r\n  \r\n    </div>     \r\n  \r\n  \r\n\r\n   </>\r\n\r\n  );\r\n}\r\n\r\nexport default Weatherapp;","import React from 'react';\nimport './App.css';\nimport Weatherapp from './components/Weatherapp';\n\nfunction App() {\n  return (\n    <div>\n      <Weatherapp/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App /> ,document.getElementById('root'));\n\n"],"sourceRoot":""}